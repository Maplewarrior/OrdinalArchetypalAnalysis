sim_0
?rbinom
rbinom(100, 20, 1/5)
mean(rbinom(100, 20, 1/5))
n <-1000
mean(rbinom(100, 20, 1/5))
n <-10000
mean(rbinom(100, 20, 1/5))
n <-100000
mean(rbinom(100, 20, 1/5))
n <-100000000
mean(rbinom(100, 20, 1/5))
n <-10000
mean(rbinom(n, 20, 1/5))
n <-100000
mean(rbinom(n, 20, 1/5))
n <-1000000
mean(rbinom(n, 20, 1/5))
n <-10000000
mean(rbinom(n, 20, 1/5))
n <-100000
d <- (rbinom(n, 20, 1/5))
max(d)
n <-100000
d <- (rbinom(n, 20, 1/5))
max(d)
n <-100000
d <- (rbinom(n, 20, 1/5))
max(d)
k <- 10000
N_A <-rnorm(k, mean=2, sd = sqrt(2))
N_B = rnorm(k, mean=-0.5, sd= sqrt(2))
B <- 1/2*N_A+N_B
mean(B)
mu1 <- (15.1+12.8)/2
k <- 10000
mu1 <- (15.1+12.8)/2
rnorm(k, mean=mu1, sd = sqrt(400))
X <-rnorm(k, mean=mu1, sd = sqrt(400))
X1 <-rnorm(k, mean=mu1, sd = sqrt(400))
X1[X1=32]
?dnorm
dnorm(32, mean=mu1, sd=sqrt(400))
pnorm(32, mean=mu1, sd=sqrt(400))
k <- 10000
mu1 <- (38.0+26.8)/2
X1 <-rnorm(k, mean=mu1, sd = sqrt(400))
X1[X1=32]
dnorm(32, mean=mu1, sd=sqrt(400))
pnorm(32, mean=mu1, sd=sqrt(400))
dnorm(32, mean=mu1, sd=sqrt(400))
mu2 = (15.1+12.8)/2
dnorm(14, mean=mu2, sd = sqrt(400))
k <- 10000
mu1 <- (38.0+26.8)/2
X1 <-rnorm(k, mean=mu1, sd = sqrt(400))
X1[X1=32]
pnorm(32, mean=mu1, sd=sqrt(400))
mu2 = (15.1+12.8)/2
pnorm(14, mean=mu2, sd = sqrt(400))
dnorm(32, mean=mu1, sd=sqrt(400))
mu2 = (15.1+12.8)/2
dnorm(14, mean=mu2, sd = sqrt(400))
k <- 10000
mu1 <- (38.0+26.8)/2
X1 <-rnorm(k, mean=mu1, sd = sqrt(400))
X1[X1=32]
v1 <- dnorm(32, mean=mu1, sd=sqrt(400))
v2 <- dnorm(14, mean=mu2, sd = sqrt(400))
mu2 = (15.1+12.8)/2
(v1*v2*2/10)/0.00010141
k <- 10000
mu1 <- (38.0+26.8)/2
X1 <-rnorm(k, mean=mu1, sd = sqrt(400))
X1[X1=32]
v1 <- pnorm(32, mean=mu1, sd=sqrt(400))
mu2 = (15.1+12.8)/2
v2 <- pnorm(14, mean=mu2, sd = sqrt(400))
(v1*v2*2/10)/0.00010141
k <- 10000
mu1 <- (38.0+26.8)/2
X1 <-rnorm(k, mean=mu1, sd = sqrt(400))
X1[X1=32]
v1 <- dnorm(32, mean=mu1, sd=sqrt(400))
mu2 = (15.1+12.8)/2
v2 <- dnorm(14, mean=mu2, sd = sqrt(400))
(v1*v2*2/10)/0.00010141
(v1*v2*2/11)/0.00010141
mu1 <- (38.0+26.8)/2
k <- 10000
mu1 <- (38.0+26.8)/2
v1 <- dnorm(32, mean=mu1, sd=sqrt(400))
mu2 = (15.1+12.8)/2
v2 <- dnorm(14, mean=mu2, sd = sqrt(400))
(v1*v2*2/11)/0.00010141
#
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
?pnorm
sigma <- 2
p_13 <- dnorm(x1, x3, sigma)
p_13
p_13 <- pnorm(x1, x3, sigma)
p_13 <- dnorm(x1, x3, sigma)
p_23 <- dnorm(x2, x3, sigma)
p_43 <- dnorm(x4, x3, sigma)
1/3 + dnorm(x2, x1, sigma) + dnorm(x3, x1, sigma) + dnorm(x4, x1, sigma)
1/3 + dnorm(x1, x2, sigma) + dnorm(x3, x2, sigma) + dnorm(x4, x2, sigma)
1/3 + dnorm(x1, x3, sigma) + dnorm(x2, x3, sigma) + dnorm(x4, x3, sigma)
1/3 + dnorm(x1, x4, sigma) + dnorm(x2, x4, sigma) + dnorm(x3, x4, sigma)
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 + dnorm(x2, x1, sigma) + dnorm(x3, x1, sigma) + dnorm(x4, x1, sigma)
p2 <- 1/3 + dnorm(x1, x2, sigma) + dnorm(x3, x2, sigma) + dnorm(x4, x2, sigma)
p3 <- 1/3 + dnorm(x1, x3, sigma) + dnorm(x2, x3, sigma) + dnorm(x4, x3, sigma)
p4 <- 1/3 + dnorm(x1, x4, sigma) + dnorm(x2, x4, sigma) + dnorm(x3, x4, sigma)
-1/4 * log(p1) + log(p2) + log(p3) + log(p4)
-1/4 * ln(p1) + log(p2) + log(p3) + log(p4)
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 + dnorm(x2, x1, sigma) + dnorm(x3, x1, sigma) + dnorm(x4, x1, sigma)
p2 <- 1/3 + dnorm(x1, x2, sigma) + dnorm(x3, x2, sigma) + dnorm(x4, x2, sigma)
p3 <- 1/3 + dnorm(x1, x3, sigma) + dnorm(x2, x3, sigma) + dnorm(x4, x3, sigma)
p4 <- 1/3 + dnorm(x1, x4, sigma) + dnorm(x2, x4, sigma) + dnorm(x3, x4, sigma)
-1/4 * logb(p1) + logb(p2) + logb(p3) + logb(p4)
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 + dnorm(x2, x1, sigma) + dnorm(x3, x1, sigma) + dnorm(x4, x1, sigma)
p2 <- 1/3 + dnorm(x1, x2, sigma) + dnorm(x3, x2, sigma) + dnorm(x4, x2, sigma)
p3 <- 1/3 + dnorm(x1, x3, sigma) + dnorm(x2, x3, sigma) + dnorm(x4, x3, sigma)
p4 <- 1/3 + dnorm(x1, x4, sigma) + dnorm(x2, x4, sigma) + dnorm(x3, x4, sigma)
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
1/3 + dnorm(x2, x1, sigma) + dnorm(x3, x1, sigma) + dnorm(x4, x1, sigma)
1/3 + dnorm(x1, x2, sigma) + dnorm(x3, x2, sigma) + dnorm(x4, x2, sigma)
1/3 + dnorm(x1, x3, sigma) + dnorm(x2, x3, sigma) + dnorm(x4, x3, sigma)
1/3 + dnorm(x1, x4, sigma) + dnorm(x2, x4, sigma) + dnorm(x3, x4, sigma)
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 + dnorm(x2, x1, sigma) + dnorm(x3, x1, sigma) + dnorm(x4, x1, sigma)
p2 <- 1/3 + dnorm(x1, x2, sigma) + dnorm(x3, x2, sigma) + dnorm(x4, x2, sigma)
p3 <- 1/3 + dnorm(x1, x3, sigma) + dnorm(x2, x3, sigma) + dnorm(x4, x3, sigma)
p4 <- 1/3 + dnorm(x1, x4, sigma) + dnorm(x2, x4, sigma) + dnorm(x3, x4, sigma)
(-1/4)*(log(p1)+log(p2)+log(p3)+log(p4))
(log(p1)+log(p2)+log(p3)+log(p4))
sums <- (log(p1)+log(p2)+log(p3)+log(p4))
sums *-1/4
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 + dnorm(x1, x2, sigma) + dnorm(x1, x3, sigma) + dnorm(x1, x4, sigma)
p2 <- 1/3 + dnorm(x2, x1, sigma) + dnorm(x2, x3, sigma) + dnorm(x2, x4, sigma)
p3 <- 1/3 + dnorm(x3, x1, sigma) + dnorm(x3, x2, sigma) + dnorm(x3, x4, sigma)
p4 <- 1/3 + dnorm(x4, x1, sigma) + dnorm(x4, x2, sigma) + dnorm(x4, x3, sigma)
sums <- (log(p1)+log(p2)+log(p3)+log(p4))
sums *-1/4
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 + dnorm(x1, x2, sigma) + dnorm(x1, x3, sigma) + dnorm(x1, x4, sigma)
p2 <- 1/3 + dnorm(x2, x1, sigma) + dnorm(x2, x3, sigma) + dnorm(x2, x4, sigma)
p3 <- 1/3 + dnorm(x3, x1, sigma) + dnorm(x3, x2, sigma) + dnorm(x3, x4, sigma)
p4 <- 1/3 + dnorm(x4, x1, sigma) + dnorm(x4, x2, sigma) + dnorm(x4, x3, sigma)
p1
p2
p3
p4
sums <- (log(p1)+log(p2)+log(p3)+log(p4))
sums
p1 <- 1/3 *(dnorm(x1, x2, sigma) + dnorm(x1, x3, sigma) + dnorm(x1, x4, sigma))
p2 <- 1/3 *(dnorm(x2, x1, sigma) + dnorm(x2, x3, sigma) + dnorm(x2, x4, sigma))
p3 <- 1/3 * (dnorm(x3, x1, sigma) + dnorm(x3, x2, sigma) + dnorm(x3, x4, sigma))
p4 <- 1/3 *(dnorm(x4, x1, sigma) + dnorm(x4, x2, sigma) + dnorm(x4, x3, sigma))
sums <- (log(p1)+log(p2)+log(p3)+log(p4))
sums *-1/4
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 *(dnorm(x1, x2, sigma) + dnorm(x1, x3, sigma) + dnorm(x1, x4, sigma))
p2 <- 1/3 *(dnorm(x2, x1, sigma) + dnorm(x2, x3, sigma) + dnorm(x2, x4, sigma))
p3 <- 1/3 * (dnorm(x3, x1, sigma) + dnorm(x3, x2, sigma) + dnorm(x3, x4, sigma))
p4 <- 1/3 *(dnorm(x4, x1, sigma) + dnorm(x4, x2, sigma) + dnorm(x4, x3, sigma))
sums <- (log(p1)+log(p2)+log(p3)+log(p4))
sums *-1/4
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 *(dnorm(x1, x2, sigma) + dnorm(x1, x3, sigma) + dnorm(x1, x4, sigma))
p2 <- 1/3 *(dnorm(x2, x1, sigma) + dnorm(x2, x3, sigma) + dnorm(x2, x4, sigma))
p3 <- 1/3 * (dnorm(x3, x1, sigma) + dnorm(x3, x2, sigma) + dnorm(x3, x4, sigma))
p4 <- 1/3 *(dnorm(x4, x1, sigma) + dnorm(x4, x2, sigma) + dnorm(x4, x3, sigma))
sums <- (log(p1)+log(p2)+log(p3)+log(p4))
sums *-1/4
-1/4 *(log(p1)+log(p2)+log(p3)+log(p4))
x1 <- 3.918
x2 <- -6.35
x3 <- -2.677
x4 <- -3.003
sigma <- 2
p1 <- 1/3 *(dnorm(x1, x2, sigma) + dnorm(x1, x3, sigma) + dnorm(x1, x4, sigma))
p2 <- 1/3 *(dnorm(x2, x1, sigma) + dnorm(x2, x3, sigma) + dnorm(x2, x4, sigma))
p3 <- 1/3 * (dnorm(x3, x1, sigma) + dnorm(x3, x2, sigma) + dnorm(x3, x4, sigma))
p4 <- 1/3 *(dnorm(x4, x1, sigma) + dnorm(x4, x2, sigma) + dnorm(x4, x3, sigma))
-1/4 *(log(p1)+log(p2)+log(p3)+log(p4))
w1 <- 0.19
w2 <- 0.34
w3 <- 0.48
mu1 <- 3.177
mu2 <- 3.181
mu3 <- 3.184
s1 <- 0.0062
s2 <- 0.0076
s3 <- 0.0075
w1*dnorm(x0, mu2, s2)
w1 <- 0.19
w2 <- 0.34
w3 <- 0.48
mu1 <- 3.177
mu2 <- 3.181
mu3 <- 3.184
s1 <- 0.0062
s2 <- 0.0076
s3 <- 0.0075
x0 <- 3.19
w2*dnorm(x0, mu2, s2)
(w2*dnorm(x0, mean = mu2,  sd = s2))
(w1*dnorm(x0, mean = mu1,  sd = s1))+(w2*dnorm(x0, mean = mu2,  sd = s2))+(w3*dnorm(x0, mean = mu3,  sd = s3))
dnorm(x0, mu1, sd1)
dnorm(x0, mu1, s1)
dnorm(x0, mu1, s1)
w1*dnorm(x0, mu1, s1)
w2*dnorm(x0, mu2, s2)
dnorm(x0, mu2, s2)
w2*dnorm(x0, mu2, s2)
w3*dnorm(x0, mu3, s3)
dnorm(1,1,1)
dnorm(1,1,0.1)
w1*pnorm(x0, mu1, s1)
w2*pnorm(x0, mu2, s2)
w3*pnorm(x0, mu3, s3)
w2*dnorm(x0, mu2, s2)
w1*pnorm(x0, mu1, s1)+w2*pnorm(x0, mu2, s2)+w3*pnorm(x0, mu3, s3)
w2*pnorm(x0, mu2, s2)
w2*dnorm(x0, mu2, s2)
dnorm(O8, mu2, s2)
6.9
mu2 <- 6.55
O8 <- 6.9
mu2 <- 6.55
s2 <- 0.13
dnorm(O8, mu2, s2)
pnorm(O8, mu2, s2)
pnorm(O8, mu2, s2) - pnorm(O8, 6.12, 0.09)
pnorm(O8, 6.12, 0.09) - pnorm(O8, mu2, s2)
w2*dnorm(x0, mu2, sqrt(s2))
w2*dnorm(x0, mu2, sqrt(s2))
O8 <- 6.9
mu2 <- 6.55
s2 <- 0.13
w2*dnorm(O8, mu2, sqrt(s2))
w2*pnorm(O8, mu2, sqrt(s2))
dnorm(O8, mu2, sqrt(s2))
pnorm(O8, mu2, sqrt(s2))
pnorm(O8, mu2, sqrt(s2))
pnorm(O8, mu2, sqrt(s2)) - pnorm(O8, mu1, sqrt(s1))
pnorm(O8, mu1, sqrt(s1))
pnorm(O8, mu1, sqrt(s1)) - pnorm(O8, mu2, sqrt(s2))
O8 <- 6.9
mu2 <- 6.55
s2 <- 0.13
mu1 <- 6.12
s1 <- 0.09
mu3 <-6.93
s3 <- 0.12
enum <- dnorm(O8, mu2, sqrt(s2))*0.37
denom <- dnorm(O8, mu1, sqrt(s1))*0.37 + dnorm(O8, mu2, sqrt(s2))*0.29 + dnorm(O8, mu3, sqrt(s3))*0.34
enum/denom
dnorm(x1, m1, s)
val <- dnorm(x1, m1, s)*dnorm(x2, m2, s)*(2/11)
s = sqrt(400)
m1 = 38
m2 = 15.1
x1 = 32
x2 = 14
val <- dnorm(x1, m1, s)*dnorm(x2, m2, s)*(2/11)
val
deno <- 0.00010141
enum <- dnorm(x1, m1, s)*dnorm(x2, m2, s)*(2/11)
enum/deno
enum <- dnorm(m1, x1, s)*dnorm(m2, x2, s)*(2/11)
enum/deno
s = sqrt(400)
m1 = 38
m2 = 15.1
x1 = 32
x2 = 14
deno <- 0.00010141
enum <- dnorm(m1, x1, s)*dnorm(m2, x2, s)*(2/11)
enum/deno
enum <- dnorm(x1, m1, s)*dnorm(x2, m2, s)*(2/11)
enum/deno
library("ordinalgmifs")
library("ordinalgmifs")
library("ordinalgmifs")
library("ordinalgmifs")
install.packages("ordinalgmifs")
# if you have not downloaded the library yet:
# --> go to packages, install, search the name and click install
library("ordinalgmifs")
version
install.packages("installr")
library(installr)
updateR()
# if you have not downloaded the library yet:
# --> go to packages, install, search the name and click install
library("ordinalgmifs")
library("ordinalgmifs")
load("C:/Users/micha/OneDrive/Skrivebord/Fagprojekt KID/AAM-Module-V3/TSAA_data/TSAA_original_data.csv")
read.csv('TSAA_original_data.csv')
setwd("C:/Users/micha/OneDrive/Skrivebord/Fagprojekt KID/AAM-Module-V3/TSAA_data")
read.csv('TSAA_original_data.csv')
data <- read.csv('TSAA_original_data.csv')
stereotype.logit <- ordinalmgifs(group ~ 1, x = data[,1], data=data, epsilon=0.01)
library("ordinalgmifs")
data <- read.csv('TSAA_original_data.csv')
stereotype.logit <- ordinalmgifs(group ~ 1, x = data[,1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(group ~ 1, x = data[,1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(group ~ 1, x = data[,-1], data=data, epsilon=0.01)
data
stereotype.logit <- ordinalgmifs(X ~ 1, x = data[,-1], data=data, epsilon=0.01)
View(stereotype.logit)
View(stereotype.logit)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x = data[,1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(X ~ 1, x = data[,-1], data=data, epsilon=0.01)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x = data[,-1], data=data, epsilon=0.001)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x = data, data=data, epsilon=0.001)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, data=data, epsilon=0.001)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x=data, data=data, epsilon=0.001)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(x=data, data=data, epsilon=0.001)
summary(stereotype.logit)
stereotype.logit <- ordinalgmifs(x=data[,-1], data=data, epsilon=0.001)
summary(stereotype.logit)
data[,1]
data[1,]
data[1:]
data[1,]
data[1,-1]
data[-1,-1]
data
stereotype.logit$zeta
stereotype.logit$alpha
stereotype.logit$y
stereotype.logit$x
stereotype.logit$beta
stereotype.logit$scale
stereotype.logit$w
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(x=data, data=data, epsilon=0.001)
summary(stereotype.logit)
coef(stereotype.logit)
data[,-1]
data
data[,-1]
stereotype.logit <- ordinalgmifs(x=data, data=data[,-1], epsilon=0.001)
stereotype.logit <- ordinalgmifs(data=data[,-1], epsilon=0.001)
stereotype.logit <- ordinalgmifs(data=data, epsilon=0.001)
stereotype.logit <- ordinalgmifs(data=data, epsilon=0.01)
summary(stereotype.logit)
coef(stereotype.logit)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x = data[,-1], data=data, epsilon=0.01)
coef(stereotype.logit)
fitted(stereotype.logit)
coef(stereotype.logit)
plot(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, data=data, epsilon=0.01)
summary(stereotype.logit)
coef(stereotype.logit)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1,x=data, data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1,x=data[,-1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1,x=data[,-1], data=data[,-1], epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[,-1], data=data[,-1], epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[,-1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit$zeta
stereotype.logit <- ordinalgmifs(x=data[,1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[,-1], data=data, epsilon=0.01)
coef(stereotype.logit)
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[1,]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[2,]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[0,]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[0,1]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[0,0]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[1,1]
data[,-1]
data <- data[,-1]
data[1,]
stereotype.logit <- ordinalgmifs(x=data[1,], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(group ~ 1, x=data[1,], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(x ~ 1, x=data[1,], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[1,], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[-1,], data=data, epsilon=0.01)
data
stereotype.logit <- ordinalgmifs(x=data[-1,], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[,-1], data=data, epsilon=0.01)
## model type (stereotype)
## link function
## logit
data <- read.csv('TSAA_original_data.csv')
data
stereotype.logit <- ordinalgmifs(x=data[-1], data=data, epsilon=0.01)
coef(stereotype.logit)
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[-1]
stereotype.logit <- ordinalgmifs(x=data[-1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(x=data[1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x=data[1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(X ~ 1, x=data[-1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ -1, x=data[-1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(x=data[-1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(x=data[-1], data=data, epsilon=0.01)
coef(stereotype.logit)
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[-1]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[-1,]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[,-1]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[,1]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[1,]
#ordinalgmifs(group, x, data, epsilon)
# group = what should be predicted
# x =
data[,1]
stereotype.logit <- ordinalgmifs(x=data[,1], data=data, epsilon=0.01)
stereotype.logit <- ordinalgmifs(X ~ 1, x=data[,1], data=data, epsilon=0.01)
coef(stereotype.logit)
stereotype.logit <- ordinalgmifs(X ~ 1, x=data[,-1], data=data, epsilon=0.01)
coef(stereotype.logit)
summary(stereotype.logit)
coef(stereotype.logit)
plot(stereotype.logit)
